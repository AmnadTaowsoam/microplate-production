// src/app/lab-station/predict-results/PredictResultsPanel.tsx
import React from 'react';
import {
  Box,
  Typography,
  CircularProgress,
  Divider,
  Table,
  TableBody,
  TableRow,
  TableCell,
} from '@mui/material';

interface PredictResultsPanelProps {
  results: {
    distribution?: Record<string, number>;
  } | null;
  isLoading?: boolean;
}

// Helper: render key:value in a professional table
function DistributionTable({ distribution }: { distribution: Record<string, number> }) {
  return (
    <Box sx={{ mt: 2 }}>
      <Typography variant="h6" gutterBottom>
        Distribution
      </Typography>

      <Table size="small" aria-label="distribution">
        <TableBody>
          {Object.entries(distribution).map(([key, value]) => (
            <TableRow key={key}>
              <TableCell component="th" scope="row">
                {key}
              </TableCell>
              <TableCell align="right">{value}</TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>

      <Divider sx={{ my: 2 }} />

      <Typography variant="caption" color="text.secondary" component="div">
        Data automatically generated by the system.
      </Typography>
      <Typography variant="caption" color="text.secondary" component="div">
        Please review results carefully.
      </Typography>
    </Box>
  );
}

export default function PredictResultsPanel({
  results,
  isLoading = false,
}: PredictResultsPanelProps) {
  if (isLoading) {
    return (
      <Box
        display="flex"
        flexDirection="column"
        justifyContent="center"
        alignItems="center"
        sx={{ p: 2, minHeight: 150 }}
      >
        <CircularProgress size={24} />
        <Typography variant="body2" sx={{ mt: 1 }} color="text.secondary">
          Loading predictions...
        </Typography>
      </Box>
    );
  }

  if (!results || !results.distribution) {
    return (
      <Box display="flex" justifyContent="center" alignItems="center" sx={{ p: 2, minHeight: 150 }}>
        <Typography variant="body2" color="text.secondary">
          No prediction results available.
        </Typography>
      </Box>
    );
  }

  return (
    <Box sx={{ p: 2 }}>
      <DistributionTable distribution={results.distribution} />
    </Box>
  );
}
